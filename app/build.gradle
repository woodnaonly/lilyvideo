apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.objectbox'
android {

    signingConfigs {
        sign {
            storeFile file("../CorianderVideo.jks")
            storePassword "C42F08D74142DE86D21D135C89EF22FF"
            keyAlias "CorianderVideo"
            keyPassword "C42F08D74142DE86D21D135C89EF22FF"
        }
    }


    compileSdkVersion useCompileSdkVersion
    buildToolsVersion useBuildToolsVersion
    defaultConfig {
        ndk {
//            abiFilters 'armeabi'
            abiFilters 'armeabi-v7a'
//            abiFilters 'arm64-v8a'
//            abiFilters 'x86'
//            abiFilters "x86_64"
        }

        applicationId "ltd.android.coriander_video"
        minSdkVersion 21
        targetSdkVersion useTargetSdkVersion
        versionCode 1
        versionName "v1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }


    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
//            def date = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08"))
            if (outputFileName != null && outputFileName.endsWith('.apk')) {

                def createTime = new Date().format("YYYYMMdd_HHmm", TimeZone.getTimeZone("GMT+08:00"))
                def fileName;

                if (variant.buildType.name != 'release') {
//                    fileName = "斗鱼_" + "debug_v${defaultConfig.versionName}_${createTime}.apk"
                    fileName = "斗鱼_" + "debug_v${defaultConfig.versionName}.apk"
                    outputFileName = fileName
                } else {
                    //release 版本只有版本号
                    fileName = "斗鱼_" + "v${defaultConfig.versionName}.apk"
                    outputFileName = fileName
                }
                outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    implementation "android.arch.lifecycle:viewmodel:1.1.1"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // https://github.com/hdodenhof/CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    //   https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation('com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46')
    //  https://github.com/pinguo-zhouwei/MZBannerView
    implementation('com.github.pinguo-zhouwei:MZBannerView:v2.0.2')
    //  https://github.com/scwang90/SmartRefreshLayout/tree/master
    implementation('com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1')

    // https://github.com/hongyangAndroid/FlowLayout
    implementation('com.hyman:flowlayout-lib:1.1.2')
    // https://github.com/CarGuo/GSYVideoPlayer
    implementation 'com.shuyu:GSYVideoPlayer:6.0.3'
    // https://github.com/ittianyu/BottomNavigationViewEx
    implementation('com.github.ittianyu:BottomNavigationViewEx:2.0.2')

    implementation('com.qmuiteam:qmui:1.2.0')
    // https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter

    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'com.jaeger.statusbarutil:library:1.5.1'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation('jp.wasabeef:glide-transformations:3.2.0') {
        exclude module: 'glide'
        exclude module: 'glide-compiler'
    }
    // retrofit2 begin
//    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'
//    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // retrofit2 end
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.android.support:multidex:1.0.3'

//    implementation 'cn.simonlee.xcodescanner:zbar:1.1.10'
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'

    implementation 'pub.devrel:easypermissions:2.0.1'

    implementation project(':matisse')


    implementation "io.objectbox:objectbox-kotlin:$objectboxVersion"
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }

        }
    }
}
